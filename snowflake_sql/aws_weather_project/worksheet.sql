EXECUTE TASK WEATHER_DB_VM.DM_WEATHER_VM.DM_WEATHER_DTL_TASK;

EXECUTE TASK WEATHER_DB_VM.DM_WEATHER_VM.DM_CURRENT_CONDITION_DTL_TASK;


SELECT DISTINCT WEATHER_TIME FROM WEATHER_DB_VM.DM_WEATHER_VM.DM_LATEST_WEATHER_DTL --WHERE WEATHER_TIME>'2023-11-26'
ORDER BY WEATHER_TIME;


SELECT DISTINCT LAST_UPDATED FROM WEATHER_DB_VM.DM_WEATHER_VM.DM_WEATHER_DTL --WHERE WEATHER_TIME>'2023-11-26'
ORDER BY LAST_UPDATED;

select * from DM_WEATHER_VM.DM_LATEST_WEATHER_DTL where date(weather_time)='2023-11-28'; --AND CITY='Madurai';

select * from DM_WEATHER_VM.DM_CURRENT_CONDITION_DTL where date(WEATHER_TIME)='2023-11-28'
ORDER BY CITY;


INSERT INTO DM_WEATHER_VM.DM_LATEST_WEATHER_DTL  
      SELECT WD.CITY||'~'||TO_CHAR(CC.WEATHER_TIME,'YYYYMMDD')AS INTEGRATION_ID, WD.CITY,WD.TEMP_C, WD.CLOUD, CC.TEXT, CC.ICON, CC.WEATHER_TIME, LD.CITY_LOCATION, LD.CITY_LOCALTIME ,
      CC.WEATHER_TIME AS EFFECTIVE_FROM_DATE,
      NULL AS EFFECTIVE_TO_DATE,
      'Y' AS ACTIVE_REC_FLAG,
      CURRENT_TIMESTAMP AS TGT_INSERT_DT,
      CURRENT_TIMESTAMP AS TGT_UPDATE_DT
      FROM DM_WEATHER_VM.DM_WEATHER_DTL WD
      JOIN DM_WEATHER_VM.DM_CURRENT_CONDITION_DTL CC ON WD.INTEGRATION_ID = CC.INTEGRATION_ID
      JOIN DM_WEATHER_VM.DM_LOCATION_DTL LD ON WD.CITY = LD.INTEGRATION_ID
      JOIN DM_WEATHER_VM.DM_LATEST_WEATHER_DTL LWD ON WD.CITY||'~'||TO_CHAR(WD.LAST_UPDATED,'YYYYMMDD') = LWD.INTEGRATION_ID
      AND WD.LAST_UPDATED > LWD.WEATHER_TIME AND LWD.ACTIVE_REC_FLAG='Y'
      WHERE WD.LAST_UPDATED > (SELECT DATE(MAX(LAST_UPDATED)) FROM DM_WEATHER_VM.DM_WEATHER_DTL );
      

      