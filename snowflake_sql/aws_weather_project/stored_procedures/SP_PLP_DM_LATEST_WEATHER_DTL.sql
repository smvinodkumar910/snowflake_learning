CREATE OR REPLACE PROCEDURE WEATHER_DB_VM.DM_WEATHER_VM.SP_PLP_DM_LATEST_WEATHER_DTL()
RETURNS VARCHAR(100)
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS 
$$  
    //Merge statement to implement scd 2
    var merge_statement1 =` MERGE INTO DM_WEATHER_VM.DM_LATEST_WEATHER_DTL TGT USING
      (SELECT LWD.INTEGRATION_ID, WD.LAST_UPDATED as EFFECTIVE_TO_DATE, 'N' ACTIVE_REC_FLAG FROM DM_WEATHER_VM.DM_LATEST_WEATHER_DTL LWD
      JOIN DM_WEATHER_VM.DM_WEATHER_DTL WD ON WD.CITY||'~'||TO_CHAR(WD.LAST_UPDATED,'YYYYMMDD') = LWD.INTEGRATION_ID
      AND WD.LAST_UPDATED > LWD.WEATHER_TIME
      WHERE ACTIVE_REC_FLAG='Y' and effective_to_date IS NULL ) SRC ON (TGT.INTEGRATION_ID = SRC.INTEGRATION_ID)
      WHEN MATCHED THEN UPDATE SET 
      TGT.EFFECTIVE_TO_DATE = SRC.EFFECTIVE_TO_DATE,
      TGT.ACTIVE_REC_FLAG = SRC.ACTIVE_REC_FLAG`;

    //Merge statement to implement scd 2 (inserting updated values)
    var merge_statement2 =` INSERT INTO DM_WEATHER_VM.DM_LATEST_WEATHER_DTL  
      SELECT WD.CITY||'~'||TO_CHAR(CC.WEATHER_TIME,'YYYYMMDD')AS INTEGRATION_ID, WD.CITY,WD.TEMP_C, WD.CLOUD, CC.TEXT, CC.ICON, CC.WEATHER_TIME, LD.CITY_LOCATION, LD.CITY_LOCALTIME ,
      CC.WEATHER_TIME AS EFFECTIVE_FROM_DATE,
      NULL AS EFFECTIVE_TO_DATE,
      'Y' AS ACTIVE_REC_FLAG,
      CURRENT_TIMESTAMP AS TGT_INSERT_DT,
      CURRENT_TIMESTAMP AS TGT_UPDATE_DT
      FROM DM_WEATHER_VM.DM_WEATHER_DTL WD
      JOIN DM_WEATHER_VM.DM_CURRENT_CONDITION_DTL CC ON WD.INTEGRATION_ID = CC.INTEGRATION_ID
      JOIN DM_WEATHER_VM.DM_LOCATION_DTL LD ON WD.CITY = LD.INTEGRATION_ID
      JOIN 
      (SELECT INTEGRATION_ID, CITY, MAX(WEATHER_TIME) WEATHER_TIME 
      FROM 
      DM_WEATHER_VM.DM_LATEST_WEATHER_DTL 
      GROUP BY INTEGRATION_ID, CITY)
      LWD ON WD.CITY||'~'||TO_CHAR(WD.LAST_UPDATED,'YYYYMMDD') = LWD.INTEGRATION_ID
      AND WD.LAST_UPDATED > LWD.WEATHER_TIME 
      WHERE WD.LAST_UPDATED >= (SELECT DATE(MAX(LAST_UPDATED)) FROM DM_WEATHER_VM.DM_WEATHER_DTL );`;
    
    var merge1 = snowflake.createStatement( {sqlText: merge_statement1} );
    var result_set1 = merge1.execute();

    var merge2 = snowflake.createStatement( {sqlText: merge_statement2} );
    var result_set2 = merge2.execute();
    
$$
;